/*
 * Copyright (C) 2018. Enfoll Pty Ltd
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.26 at 03:58:23 PM AEDT 
//


package com.enfoll.sdk.android.epcis;

import android.annotation.SuppressLint;
import android.location.Location;

import org.simpleframework.xml.Element;
import org.simpleframework.xml.Namespace;
import org.simpleframework.xml.Order;
import org.simpleframework.xml.Root;

import java.util.ArrayList;
import java.util.List;









/**
 * <p>Java class for BusinessLocationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BusinessLocationType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="id" type="{urn:epcglobal:epcis:xsd:1}BusinessLocationIDType"/>
 *         &lt;element name="extension" type="{urn:epcglobal:epcis:xsd:1}BusinessLocationExtensionType" minOccurs="0"/>
 *         &lt;any processContents='lax' namespace='##other' maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */

@Root(strict=false)
@Order(elements={"id","extension", "any"})
@Namespace(reference="urn:epcglobal:epcis:xsd:1", prefix = "epcis")
public class BusinessLocationType {

//    @XmlSchemaType(name = "anyURI")
    @Element
    private String id;

    @Element(required = false)
    private BusinessLocationExtensionType extension;

    @Element(required=false)
    @Namespace(reference="http://ns.enfoll.com/ext")
    protected LocationExt ext;


    //    @XmlAnyElement(lax = true)
    @Element(required = false)
    private List<Object> any;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Sets the value of the id property to a GPS location.
     *
     * This is formatted into a RFC5870 format geocode location.
     *
     * At the equator (which is the maximum width of the lines of longitude):
     *
     *  decimal  degrees    distance
     *   places
     *   -------------------------------
     *   0        1.0        111 km
     *   1        0.1        11.1 km
     *   2        0.01       1.11 km
     *   3        0.001      111 m
     *   4        0.0001     11.1 m
     *   5        0.00001    1.11 m
     *   6        0.000001   0.111 m
     *   7        0.0000001  1.11 cm
     *   8        0.00000001 1.11 mm
     *
     *   So six decimal places for a delivery is good enough for our purposes as
     *   not likely to loose any key information.
     *
     * @param loc
     *     allowed object is
     *     {@link Location }
     *
     */
    @SuppressLint("DefaultLocale")
    public void setId(Location loc) {

        String str = "geo:";
        String PARAM_CRS = ";crs=wgs84";


        str = str + String.format("%2.6f,%2.6f", loc.getLatitude(), loc.getLongitude());

        if (loc.hasAltitude()) {
            /*
             * Altitude is always in Metres.
             */
            str = str + String.format(",%2.2f", loc.getAltitude());
        }
        if (loc.hasAccuracy()) {
            /*
             * Accuracy is the 68% confidence, if locations followed the normal distribution
             * - which they don't so not really sure what this means.
             */
            str = str + String.format(";u=%.2f", loc.getAccuracy());

        }
        /*
         * RFC5870 says that it's optional I think it should be mandatory. Too many cases
         * of comparing local AMG coordinates with WGS84 with strange (off by 1.6M in 2017) results.
         */
        id = str + PARAM_CRS;
    }

    /**
     * Gets the value of the extension property.
     * 
     * @return
     *     possible object is
     *     {@link BusinessLocationExtensionType }
     *     
     */
    public BusinessLocationExtensionType getExtension() {
        return extension;
    }

    /**
     * Sets the value of the extension property.
     * 
     * @param value
     *     allowed object is
     *     {@link BusinessLocationExtensionType }
     *     
     */
    public void setExtension(BusinessLocationExtensionType value) {
        this.extension = value;
    }

    public LocationExt getExt() {
        return this.ext;
    }

    public void setExt(LocationExt value) {
        this.ext = value;
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Element }
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<>();
        }
        return this.any;
    }

}
